<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2014-2017 Cohorte Technologies (ex. isandlaTech) http://cohorte.tech 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->

<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cohorte.platforms</groupId>
	<artifactId>cohorte</artifactId>
	<version>1.3.0-SNAPSHOT</version> <!-- MOD_BD_20170707 -->
	<packaging>pom</packaging>

	<name>COHORTE Project ::: Platforms :: HOME </name>

	<url>https://github.com/isandlaTech/cohorte-platforms</url>

	<properties>
		<timestamp>${maven.build.timestamp}</timestamp>
		<maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>		
		<tycho-version>0.22.0</tycho-version>
		<!-- ================ dependencies versions ================= -->
		<!-- SHOULD ALSO UPDATE "requirements.txt" for python bundles -->
		<jabsorb-version>1.1.0</jabsorb-version>		
		<cohorte-utilities-version>1.0.13</cohorte-utilities-version>
		<cohorte-remote-version>1.2.1</cohorte-remote-version>
		<cohorte-herald-version>1.0.1</cohorte-herald-version>
		<cohorte-runtime-version>1.2.0-SNAPSHOT</cohorte-runtime-version>		
		<!-- ======================================================== -->
	</properties>

	<dependencies>
		<!-- cohorte-utilities -->
		<dependency>
			<groupId>org.cohorte.utilities</groupId>
			<artifactId>org.cohorte.utilities</artifactId>
			<version>${cohorte-utilities-version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- cohorte-jabsorb -->
		<dependency>
			<groupId>org.cohorte.jabsorb</groupId>
			<artifactId>org.jabsorb.ng</artifactId>
			<version>${jabsorb-version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- cohorte-remote -->
		<dependency>
			<groupId>org.cohorte.remote</groupId>
			<artifactId>cohorte-remote-package</artifactId>
			<version>${cohorte-remote-version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<!-- cohorte-runtime -->
		<dependency>
			<groupId>org.cohorte.runtime</groupId>
			<artifactId>cohorte-runtime-package</artifactId>
			<version>${cohorte-runtime-version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<!-- cohorte-herald -->
		<dependency>
			<groupId>org.cohorte.herald</groupId>
			<artifactId>cohorte-herald-package</artifactId>
			<version>${cohorte-herald-version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>repo</directory>
								<includes>
									<include>**/org.cohorte.*</include>
									<include>**/org.jabsorb.*</include>
									<include>**/org.psem2m*</include>
									<include>**/cohorte/**</include>
									<include>**/herald/**</include>
									<include>**/jpype/**</include>
									<include>**/jpypex/**</include>
									<include>**/jsonrpclib/**</include>
									<include>**/pelix/**</include>
									<include>**/requests/**</include>
									<include>**/sleekxmpp/**</include>
									<include>**/_jpype*</include>
								</includes>
								<excludes>
									<exclude>**/felix/**</exclude>
									<exclude>**/webadmin/**</exclude>
									<exclude>org.eclipse.osgi_3.7.2.v20120110-1415.jar</exclude>
									<exclude>README</exclude>
								</excludes>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
					<executions>
						<execution>
							<id>src-dependencies</id>
							<phase>package</phase>
							<goals>
								<!-- use copy-dependencies instead if you don't want to explode the 
									sources -->
								<goal>unpack-dependencies</goal>
							</goals>
							<configuration>
								<classifier>sources</classifier>
								<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
								<outputDirectory>${project.build.directory}/sources</outputDirectory>
								<includeGroupIds>
									org.cohorte.utilities,
									org.cohorte.jabsorb,
									org.cohorte.remote,
									org.cohorte.herald,
									org.cohorte.runtime
								</includeGroupIds>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<!-- Full Distribution -->
			<id>full</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>repo</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<excludeTypes>pom</excludeTypes>
									<includeGroupIds>
										org.cohorte.utilities,
										org.cohorte.jabsorb,
										org.cohorte.remote,
										org.cohorte.herald,
										org.cohorte.runtime
									</includeGroupIds>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build/scripts/prepare.sh</argument>
										<argument>full</argument>
										<argument>${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4.1</version>
						<executions>
							<execution>
								<id>full-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>${project.artifactId}-${project.version}</finalName>
									<outputDirectory>target/</outputDirectory>
									<directoryMode>755</directoryMode>
									<tarLongFileMode>gnu</tarLongFileMode>
									<descriptors>
										<descriptor>build/assemblies/full-assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>conf/version.js</file>
											<type>js</type>
											<classifier>full-distribution-version</classifier>
										</artifact>
										<artifact>
											<file>CHANGELOG.txt</file>
											<type>txt</type>
											<classifier>changelog</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Mac OS X Distribution -->
			<id>macosx</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>repo</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<excludeTypes>pom</excludeTypes>
									<includeGroupIds>
										org.cohorte.utilities,
										org.cohorte.jabsorb,
										org.cohorte.remote,
										org.cohorte.herald,
										org.cohorte.runtime
									</includeGroupIds>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build/scripts/prepare.sh</argument>
										<argument>macosx</argument>
										<argument>${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4.1</version>
						<executions>
							<execution>
								<id>macosx-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>${project.artifactId}-${project.version}</finalName>
									<outputDirectory>target/</outputDirectory>
									<directoryMode>755</directoryMode>
									<tarLongFileMode>gnu</tarLongFileMode>
									<descriptors>
										<descriptor>build/assemblies/macosx-assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>conf/version.js</file>
											<type>js</type>
											<classifier>macosx-distribution-version</classifier>
										</artifact>
										<artifact>
											<file>CHANGELOG.txt</file>
											<type>txt</type>
											<classifier>changelog</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Linux Distribution -->
			<id>linux</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>repo</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<excludeTypes>pom</excludeTypes>
									<includeGroupIds>
										org.cohorte.utilities,
										org.cohorte.jabsorb,
										org.cohorte.remote,
										org.cohorte.herald,
										org.cohorte.runtime
									</includeGroupIds>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build/scripts/prepare.sh</argument>
										<argument>linux</argument>
										<argument>${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4.1</version>
						<executions>
							<execution>
								<id>assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>${project.artifactId}-${project.version}</finalName>
									<outputDirectory>target/</outputDirectory>
									<tarLongFileMode>gnu</tarLongFileMode>
									<descriptors>
										<descriptor>build/assemblies/linux-assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>conf/version.js</file>
											<type>js</type>
											<classifier>linux-distribution-version</classifier>
										</artifact>
										<artifact>
											<file>CHANGELOG.txt</file>
											<type>txt</type>
											<classifier>changelog</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Windows Distribution -->
			<id>windows</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>repo</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<excludeTypes>pom</excludeTypes>
									<includeGroupIds>
										org.cohorte.utilities,
										org.cohorte.jabsorb,
										org.cohorte.remote,
										org.cohorte.herald,
										org.cohorte.runtime
									</includeGroupIds>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build/scripts/prepare.sh</argument>
										<argument>windows</argument>
										<argument>${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>exec-maven-plugin</artifactId> 
						<version>1.2.1</version> <executions> <execution> <id>prepare</id> <phase>generate-sources</phase> 
						<goals> <goal>exec</goal> </goals> <configuration> <executable>cmd</executable> 
						<arguments> <argument>/c</argument> <argument>build\scripts\prepare.bat</argument> 
						</arguments> <workingDirectory>${basedir}</workingDirectory> </configuration> 
						</execution> </executions> </plugin> -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4.1</version>
						<executions>
							<execution>
								<id>assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>${project.artifactId}-${project.version}</finalName>
									<outputDirectory>target/</outputDirectory>
									<tarLongFileMode>gnu</tarLongFileMode>
									<descriptors>
										<descriptor>build/assemblies/windows-assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>conf/version.js</file>
											<type>js</type>
											<classifier>windows-distribution-version</classifier>
										</artifact>
										<artifact>
											<file>CHANGELOG.txt</file>
											<type>txt</type>
											<classifier>changelog</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Python distribution -->
			<id>python</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>					
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build/scripts/prepare.sh</argument>
										<argument>python</argument>
										<argument>${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4.1</version>
						<executions>
							<execution>
								<id>assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<finalName>${project.artifactId}-${project.version}</finalName>
									<outputDirectory>target/</outputDirectory>
									<tarLongFileMode>gnu</tarLongFileMode>
									<descriptors>
										<descriptor>build/assemblies/python-assembly.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>conf/version.js</file>
											<type>js</type>
											<classifier>python-distribution-version</classifier>
										</artifact>
										<artifact>
											<file>CHANGELOG.txt</file>
											<type>txt</type>
											<classifier>changelog</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Java -->
			<id>java</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<id>copy-dependencies</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>repo</outputDirectory>
									<overWriteReleases>false</overWriteReleases>
									<overWriteSnapshots>true</overWriteSnapshots>
									<excludeTypes>pom</excludeTypes>
									<includeGroupIds>
										org.cohorte.utilities,
										org.cohorte.jabsorb,
										org.cohorte.remote,
										org.cohorte.herald,
										org.cohorte.runtime
									</includeGroupIds>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_local_p2</id>
			<!-- should compile before, should not call clean -->
			<build>
				<plugins>
					<!-- Prepare P2 repo sources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<id>prepare-source-bundles</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target name="copy bundles from repo">
										<copy todir="${basedir}/target/p2/sources/plugins">
											<fileset dir="${basedir}/repo">
												<include name="*.jar" />
											</fileset>
											<fileset dir="${basedir}/repo/felix">
												<include name="*.jar" />
											</fileset>
										</copy>
										<copy file="${basedir}/p2/local/category.xml" todir="${basedir}/target/p2/local" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Construct P2 repo -->
					<plugin>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-p2-extras-plugin</artifactId>
						<version>${tycho-version}</version>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>publish-features-and-bundles</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<sourceLocation>${basedir}/target/p2/sources</sourceLocation>
							<artifactRepositoryLocation>${basedir}/target/p2/local</artifactRepositoryLocation>
							<metadataRepositoryLocation>${basedir}/target/p2/local</metadataRepositoryLocation>
							<compress>false</compress>
							<append>true</append>
							<publishArtifacts>true</publishArtifacts>
						</configuration>
					</plugin>

				</plugins>

			</build>
		</profile>
		<profile>
			<id>generate_update_site</id>
			<modules>
				<module>p2</module>
			</modules>
		</profile>
		<profile>
			<id>upload_update_site</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>delete_existing_raw_repo</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sh</executable>
									<arguments>
										<argument>delete.sh</argument>
										<argument>${NEXUS_USER}</argument>
										<argument>${NEXUS_PASS}</argument>
										<argument>cohorte-p2-${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}/p2/nexus</workingDirectory>
								</configuration>
							</execution>
							<execution>
								<id>create_raw_repo</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>create.sh</argument>
										<argument>${NEXUS_USER}</argument>
										<argument>${NEXUS_PASS}</argument>
										<argument>cohorte-p2-${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}/p2/nexus</workingDirectory>
								</configuration>
							</execution>
							<execution>
								<id>upload</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>upload.sh</argument>
										<argument>${NEXUS_USER}</argument>
										<argument>${NEXUS_PASS}</argument>
										<argument>cohorte-p2-${project.version}</argument>
									</arguments>
									<workingDirectory>${basedir}/p2</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_base_image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build_base.sh</argument>
										<argument>${DOCKER_USER}</argument>
										<argument>${DOCKER_PASS}</argument>										
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_base_image_from_jenkins</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>ssh</executable>
									<arguments>
										<argument>root@forge.cohorte.tech</argument>
										<argument>/var/volumes/jenkins/workspace/cohorte/cohorte-platforms/docker/build_base.sh ${DOCKER_USER} ${DOCKER_PASS}</argument>
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_runtime_image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>sh</executable>
									<arguments>
										<argument>build_runtime.sh</argument>
										<argument>${project.version}</argument>
										<argument>${DOCKER_USER}</argument>
										<argument>${DOCKER_PASS}</argument>										
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_runtime_image_from_jenkins</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>ssh</executable>
									<arguments>
										<argument>root@forge.cohorte.tech</argument>
										<argument>/var/volumes/jenkins/workspace/cohorte/cohorte-platforms/docker/build_runtime.sh ${project.version} ${DOCKER_USER} ${DOCKER_PASS}</argument>
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_node_image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build_node.sh</argument>
										<argument>${project.version}</argument>
										<argument>${DOCKER_USER}</argument>
										<argument>${DOCKER_PASS}</argument>										
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_node_image_from_jenkins</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>ssh</executable>
									<arguments>
										<argument>root@forge.cohorte.tech</argument>
										<argument>/var/volumes/jenkins/workspace/cohorte/cohorte-platforms/docker/build_node.sh ${project.version} ${DOCKER_USER} ${DOCKER_PASS}</argument>
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_demo_image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>bash</executable>
									<arguments>
										<argument>build_demo.sh</argument>
										<argument>${project.version}</argument>
										<argument>${DOCKER_USER}</argument>
										<argument>${DOCKER_PASS}</argument>										
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate_docker_demo_image_from_jenkins</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>prepare</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>ssh</executable>
									<arguments>
										<argument>root@forge.cohorte.tech</argument>
										<argument>/var/volumes/jenkins/workspace/cohorte/cohorte-platforms/docker/build_demo.sh ${project.version} ${DOCKER_USER} ${DOCKER_PASS}</argument>
									</arguments>
									<workingDirectory>${basedir}/docker</workingDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
			<distribution>manual</distribution>
		</license>
	</licenses>

	<organization>
		<name>Cohorte Technologies (ex. isandlaTech)</name>
		<url>http://cohorte-technologies.com</url>
	</organization>

	<issueManagement>
		<system>Github</system>
		<url>https://github.com/isandlaTech/cohorte-platforms/issues</url>
	</issueManagement>

	<repositories>
		<repository>
			<id>cohorte.snapshots</id>
			<name>Cohorte Snapshot Repository</name>
			<url>http://nrm.cohorte.tech/repository/cohorte-snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>cohorte.releases</id>
			<name>Cohorte Releases Repository</name>
			<url>http://nrm.cohorte.tech/repository/cohorte-releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<distributionManagement>
		<repository>
			<id>cohorte-nexus</id>
			<name>Cohorte Releases Repository</name>
			<url>http://nrm.cohorte.tech/repository/cohorte-releases/</url>
			<layout>default</layout>
		</repository>
		<snapshotRepository>
			<id>cohorte-nexus</id>
			<name>Cohorte Snapshots Repository</name>
			<url>http://nrm.cohorte.tech/repository/cohorte-snapshots/</url>
			<uniqueVersion>true</uniqueVersion>
			<layout>default</layout>
		</snapshotRepository>
	</distributionManagement>

</project>
